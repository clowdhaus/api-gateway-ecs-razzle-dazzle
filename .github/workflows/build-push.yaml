name: build-push

on:
  push:
    tags:
      - "rc-*"
      - "v*"

env:
  APP: api-gateway-ecs-razzle-dazzle

jobs:
  build:
    name: Build & push image to ECR
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          role-duration-seconds: 900
          role-session-name: ApiGatewayEcsRazzleDazzle

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set environment variables
        run: |
          REGISTRY_URL=$(aws ssm get-parameter --name /ecr/${{ env.APP }}/url --region ${{ secrets.AWS_DEFAULT_REGION }} --query Parameter.Value --output text )
          echo "IMAGE=${REGISTRY_URL}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE }}

      - name: Build image
        uses: docker/build-push-action@v4
        with:
          context: dazzle
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64
